build:
    image: node:5.11.1
    commands:
        - npm install
        - npm install -g node-flint@3.0.7
        - npm install -g fs
        - npm install -g csv-parse
        - npm install -g request
        - npm install -g should
        - curl https://api.ciscospark.com/v1/messages -X POST -H "Authorization:Bearer $$SPARK_TOKEN" --data "roomId=$$SPARK_ROOM" --data "text=Drone chewing up and spitting out build $CI_BUILD_NUMBER"

publish:
  docker:
    repo: $$DOCKER_USERNAME/tspark_bot
    tag: latest
    username: $$DOCKER_USERNAME
    password: $$DOCKER_PASSWORD
    email: $$DOCKER_EMAIL
    file: Dockerfile

deploy:
  webhook:
    image: plugins/drone-webhook
    skip_verify: true
    method: POST
    auth:
      username: $$MANTL_USERNAME
      password: $$MANTL_PASSWORD
    urls:
      - https://$$MANTL_CONTROL/marathon/v2/apps/imapex/tsparktrak/tsparktrakbot/restart?force=true

#notify:
#  spark:
#    image: hpreston/drone-spark
#    auth_token: $$SPARK_TOKEN
#    roomId: $$SPARK_ROOM

notify:
    webhook:
        debug: true
        image: plugins/drone-webhook
        when:
            success: true
            failure: true
        method: POST
        header:
            Content-type: application/json; charset=utf-8
            Authorization: Bearer $$SPARK_TOKEN
        urls:
            - https://api.ciscospark.com/v1/messages
        template: |
            {
                "roomId": "$$SPARK_ROOM",
                {{#success build.status}}
                "text": "Drone confirms {{repo.full_name}} build {{build.number}} completed successfully.\nhttp://github.com/{{repo.full_name}}/commit/{{build.commit}}."
                {{else}}
                "text": "Drone blames {{build.author}} for breaking build {{build.number}}.\nhttp://github.com/{{repo.full_name}}/commit/{{build.commit}}."
                {{/success}}
            }
